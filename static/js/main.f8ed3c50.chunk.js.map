{"version":3,"sources":["components/history.js","components/Login.js","components/Register.js","components/CreateQuestion.js","components/CreateExam.js","components/TeacherMenu.js","components/StudentMenu.js","components/TakeExam.js","components/AvailableExams.js","components/ResultExam.js","components/CompletedExams.js","components/SchoolResults.js","components/IndividualResults.js","components/CreateExamWithCategory.js","App.js","serviceWorker.js","index.js"],"names":["createBrowserHistory","Login","props","usernameChangeHandler","e","setState","username","target","value","passwordChangeHandler","password","roleChangeHandler","role","handleSubmit","event","a","preventDefault","state","length","fetch","domain","method","mode","headers","body","JSON","stringify","then","res","json","result","userIdChangeHandler","user","id","tokenChangeHandler","token","redirect","catch","err","console","log","alert","goToRegister","this","to","className","onSubmit","type","placeholder","onChange","Component","Register","CreateQuestion","categoryChangeHandler","category","questionChangeHandler","question","answerChangeHandler","optionsArray","answerOptions","name","slice","addAnswer","push","correctAnswerChangeHandler","correctAnswerNo","find","element","answer","map","option","index","key","answerNo","onClick","class","defaultValue","CreateExam","toggleQuestionSelect","checked","selected","selectedQuestionArray","parseInt","splice","findIndex","k","nameChangeHandler","targetChangeHandler","submitHandler","examObject","userId","questionsList","getStudentsList","studentList","rows","error","isLoaded","questionsArray","scope","TeacherMenu","StudentMenu","withRouter","TakeExam","handleRadioChange","questionId","answers","forEach","examId","studentId","examReturned","examResult","results","location","questionList","_answer","pathname","ref","form","item","i","AvailableExams","pendingExams","numberOfQuestions","ResultExam","undefined","score","date","studentAnswers","studentAnswerContent","correctAnswerContent","CompletedExams","data","SchoolResults","resultsArray","studentUsername","createExamWithCategory","inputChangeHandler","code","questionCategories","App","examTakingHandler","examTaking","landingPage","routerProps","currentRoute","path","exact","render","React","Boolean","window","hostname","match","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"8SAEeA,YAAqB,I,uBCCfC,E,YACjB,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAQVC,sBAAwB,SAACC,GACrB,EAAKC,SAAS,CAAEC,SAAUF,EAAEG,OAAOC,SAVpB,EAYnBC,sBAAwB,SAACL,GACrB,EAAKC,SAAS,CAAEK,SAAUN,EAAEG,OAAOC,SAbpB,EAenBG,kBAAoB,SAACP,GACjB,EAAKC,SAAS,CAAEO,KAAMR,EAAEG,OAAOC,SAhBhB,EAkBnBK,aAlBmB,uCAkBJ,WAAOC,GAAP,SAAAC,EAAA,yDACXD,EAAME,mBACF,EAAKC,MAAMX,SAASY,OAAS,GAAK,EAAKD,MAAMP,SAASQ,OAAS,GAFxD,gCAGDC,MAAM,GAAD,OAAI,EAAKjB,MAAMkB,OAAf,YAAyB,EAAKH,MAAML,KAApC,UAAkD,CACzDS,OAAQ,OACRC,KAAM,OACNC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAEpB,SAAU,EAAKW,MAAMX,SAAUI,SAAU,EAAKO,MAAMP,aAE1EiB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACF,EAAK5B,MAAM6B,oBAAoBD,EAAOE,KAAKC,IAC3C,EAAK/B,MAAMgC,mBAAmBJ,EAAOK,OACrC,EAAKjC,MAAMS,kBAAkB,EAAKM,MAAML,MACxC,EAAKP,SAAS,CAAE+B,UAAU,OAE7BC,OAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZG,MAAM,wCApBP,OAuBXF,QAAQC,IAAI,EAAKtC,MAAM8B,MAvBZ,2CAlBI,wDA4CnBU,aAAe,SAAC5B,GACZA,EAAME,kBA3CN,EAAKC,MAAQ,CACTX,SAAU,GACVI,SAAU,GACVE,KAAM,WACNwB,UAAU,GANC,E,sEAiDf,OAAIO,KAAK1B,MAAMmB,SACJ,kBAAC,IAAD,CAAUQ,GAAG,MAGpB,yBAAKC,UAAU,kBACX,qCACA,0BAAMC,SAAUH,KAAK9B,cACjB,yBAAKgC,UAAU,cACX,4CACA,2BAAOE,KAAK,OAAOF,UAAU,eAAerC,MAAOmC,KAAK1B,MAAMX,SAAU0C,YAAY,WAAWC,SAAUN,KAAKxC,yBAElH,yBAAK0C,UAAU,cACX,4CACA,2BAAOE,KAAK,WAAWF,UAAU,eAAerC,MAAOmC,KAAK1B,MAAMP,SAAUsC,YAAY,WAAWC,SAAUN,KAAKlC,yBAEtH,yBAAKoC,UAAU,cACX,8CACA,4BAAQA,UAAU,eAAerC,MAAOmC,KAAK1B,MAAML,KAAMqC,SAAUN,KAAKhC,mBACpE,4BAAQH,MAAM,YAAd,WACA,4BAAQA,MAAM,YAAd,aAGR,2BAAOqC,UAAU,MAAME,KAAK,SAASvC,MAAM,UAC3C,yBAAKqC,UAAU,aAAf,kCACA,kBAAC,IAAD,CAAMD,GAAG,aAAY,4BAAQC,UAAU,OAAlB,oB,GA1ENK,aCAdC,E,YACjB,WAAYjD,GAAQ,IAAD,8BACf,4CAAMA,KAOVC,sBAAwB,SAACC,GACrB,EAAKC,SAAS,CAAEC,SAAUF,EAAEG,OAAOC,SATpB,EAWnBC,sBAAwB,SAACL,GACrB,EAAKC,SAAS,CAAEK,SAAUN,EAAEG,OAAOC,SAZpB,EAcnBG,kBAAoB,SAACP,GACjB,EAAKC,SAAS,CAAEO,KAAMR,EAAEG,OAAOC,SAfhB,EAiBnBK,aAjBmB,uCAiBJ,WAAOC,GAAP,SAAAC,EAAA,yDACXD,EAAME,mBACF,EAAKC,MAAMX,SAASY,OAAS,GAAK,EAAKD,MAAMP,SAASQ,OAAS,GAFxD,gCAGDC,MAAM,GAAD,OAAI,EAAKjB,MAAMkB,OAAf,YAAyB,EAAKH,MAAML,MAAQ,CACnDS,OAAQ,OACRC,KAAM,OACNC,QAAS,CACL,eAAgB,oBAEpBC,KAAMC,KAAKC,UAAU,CAAEpB,SAAU,EAAKW,MAAMX,SAAUI,SAAU,EAAKO,MAAMP,aAE1EiB,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFS,QAAQC,IAAIV,GACZW,MAAM,4BAETJ,OAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZG,MAAM,qBAAsBH,MAlB7B,OAqBXC,QAAQC,IAAI,EAAKtC,MAAM8B,MArBZ,2CAjBI,sDAEf,EAAKf,MAAQ,CACTX,SAAU,GACVI,SAAU,GACVE,KAAM,YALK,E,sEA0Cf,OACI,yBAAKiC,UAAU,kBACX,wCACA,0BAAMC,SAAUH,KAAK9B,cACjB,yBAAKgC,UAAU,cACX,4CACA,2BAAOE,KAAK,OAAOF,UAAU,eAAerC,MAAOmC,KAAK1B,MAAMX,SAAU0C,YAAY,WAAWC,SAAUN,KAAKxC,yBAElH,yBAAK0C,UAAU,cACX,4CACA,2BAAOE,KAAK,OAAOF,UAAU,eAAerC,MAAOmC,KAAK1B,MAAMP,SAAUsC,YAAY,WAAWC,SAAUN,KAAKlC,yBAElH,yBAAKoC,UAAU,cACX,8CACA,4BAAQA,UAAU,eAAerC,MAAOmC,KAAK1B,MAAML,KAAMqC,SAAUN,KAAKhC,mBACpE,4BAAQH,MAAM,YAAd,WACA,4BAAQA,MAAM,YAAd,aAGR,6BACI,2BAAOqC,UAAU,kBAAkBE,KAAK,SAASvC,MAAM,cAE3D,yBAAKqC,UAAU,QACX,kBAAC,IAAD,CAAMD,GAAG,KAAK,4BAAQC,UAAU,OAAlB,4B,GAlEAK,aCAjBE,E,YACjB,WAAYlD,GAAQ,IAAD,8BACf,4CAAMA,KAQVmD,sBAAwB,SAACvC,GACrBA,EAAME,iBACN,EAAKX,SAAS,CAAEiD,SAAUxC,EAAMP,OAAOC,SAXxB,EAanB+C,sBAAwB,SAACzC,GACrBA,EAAME,iBACN,EAAKX,SAAS,CAAEmD,SAAU1C,EAAMP,OAAOC,SAfxB,EAiBnBiD,oBAAsB,SAAC3C,GACnBA,EAAME,iBACN,IAAI0C,EAAe,EAAKzC,MAAM0C,cAC9BD,EAAa5C,EAAMP,OAAOqD,KAAKC,MAAM,GAAK,GAAK,CAAE,SAAY/C,EAAMP,OAAOqD,KAAKC,MAAM,GAAI,OAAU/C,EAAMP,OAAOC,OAChH,EAAKH,SAAL,eAAmB,EAAKY,MAAxB,CAA+B0C,cAAeD,MArB/B,EAuBnBI,UAAY,SAAChD,GACTA,EAAME,iBACN,IAAI0C,EAAe,EAAKzC,MAAM0C,cAC9BD,EAAaK,KAAK,CAAE,SAAYL,EAAaxC,OAAS,EAAG,OAAU,KACnE,EAAKb,SAAL,eAAmB,EAAKY,MAAxB,CAA+B0C,cAAeD,MA3B/B,EA6BnBM,2BAA6B,SAAClD,GAC1BA,EAAME,iBACN,EAAKX,SAAS,CAAE4D,gBAAiBnD,EAAMP,OAAOC,SA/B/B,EAiCnBK,aAjCmB,uCAiCJ,WAAOC,GAAP,SAAAC,EAAA,yDACXD,EAAME,mBACF,EAAKC,MAAMqC,SAASpC,OAAS,GAC1B,EAAKD,MAAMuC,SAAStC,OAAS,IAC5B,EAAKD,MAAM0C,cAAcO,MAAK,SAAAC,GAAO,OAA8B,IAA1BA,EAAQC,OAAOlD,UAJrD,gCAKDC,MAAM,GAAD,OAAI,EAAKjB,MAAMkB,OAAf,yBAA8C,CACrDC,OAAQ,OACRC,KAAM,OACNC,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAY,EAAKrB,MAAM8B,KAAKG,OAEjDX,KAAMC,KAAKC,UAAU,EAAKT,SAEzBU,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFW,MAAM,4BACNF,QAAQC,IAAIV,GACZ,EAAKzB,SAAS,CACViD,SAAU,GACVE,SAAU,GACVS,gBAAiB,EACjBN,cAAe,CAAC,CAAE,SAAY,EAAG,OAAU,UAGlDtB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAzBvB,6BA4BPG,MAAM,wCA5BC,2CAjCI,sDAEf,EAAKxB,MAAQ,CACTqC,SAAU,GACVE,SAAU,GACVS,gBAAiB,EACjBN,cAAe,CAAC,CAAE,SAAY,EAAG,OAAU,MANhC,E,sEAgET,IAAD,OACL,MAA6B,aAAzBhB,KAAKzC,MAAM8B,KAAKpB,MAChB6B,MAAM,aACC,kBAAC,IAAD,CAAUG,GAAG,OAGhB,yBAAKC,UAAU,kBACX,kBAAC,IAAD,CAAMD,GAAG,KAAI,4BAAQC,UAAU,6BAAlB,iBAA0E,6BACvF,iDACA,0BAAMC,SAAUH,KAAK9B,cACjB,yBAAKgC,UAAU,cACX,4CACA,2BAAOE,KAAK,OAAOF,UAAU,eAAeG,YAAY,WAAWxC,MAAOmC,KAAK1B,MAAMqC,SAAUL,SAAUN,KAAKU,yBAElH,yBAAKR,UAAU,cACX,4CACA,2BAAOE,KAAK,OAAOF,UAAU,eAAeG,YAAY,WAAWxC,MAAOmC,KAAK1B,MAAMuC,SAAUP,SAAUN,KAAKY,yBAElH,2BAAOV,UAAU,SACZF,KAAK1B,MAAM0C,cAAcU,KAAI,SAACC,EAAQC,GAAT,OAC1B,wBAAIC,IAAKD,GACL,sCAAa,EAAKtD,MAAM0C,cAAcY,GAAOE,SAA7C,KACA,4BAAI,2BAAO1B,KAAK,OACZa,KAAM,WAAa,EAAK3C,MAAM0C,cAAcY,GAAOE,SACnDjE,MAAO,EAAKS,MAAM0C,cAAcY,GAAOH,OACvCnB,SAAU,EAAKQ,4BAK/B,4BAAQZ,UAAU,oBAAoB6B,QAAS/B,KAAKmB,WAApD,KAAyE,6BACzE,yBAAKjB,UAAU,YACX,yBAAKA,UAAU,SAAf,+BACA,yBAAKA,UAAU,SACX,4BAAQ8B,MAAM,eAAeC,aAAcjC,KAAK1B,MAAM0C,cAAc,GAAGc,SAAUxB,SAAUN,KAAKzC,MAAMS,mBACjGgC,KAAK1B,MAAM0C,cAAcU,KAAI,SAACC,EAAQC,GAAT,OAC1B,4BAAQ/D,MAAO8D,EAAOG,SAAUD,IAAKD,GAAQD,EAAOG,gBAKpE,6BACA,2BAAO5B,UAAU,kBAAkBE,KAAK,SAASvC,MAAM,oBACvD,mC,GA5GoB0C,aCAvB2B,E,YACjB,WAAY3E,GAAQ,IAAD,8BACf,4CAAMA,KA4CV4E,qBAAuB,SAAChE,EAAOyD,GAC3B,IAAI/D,EAAQ,EAAKS,MAAMT,MACvBA,EAAM+D,GAASzD,EAAMP,OAAOwE,QAC5B,IAAIC,EAAW,EAAK/D,MAAMgE,sBACtBnE,EAAMP,OAAOwE,QACbC,EAASjB,KAAKmB,SAASpE,EAAMP,OAAOqD,OAEpCoB,EAASG,OAAOH,EAASI,WAAU,SAAAC,GAAC,OAAIA,IAAMvE,EAAMP,OAAOqD,QAAO,GAEtE,EAAKvD,SAAS,CAAEG,QAAOyE,sBAAuBD,KAtD/B,EAyDnBM,kBAAoB,SAACxE,GACjBA,EAAME,iBACN,EAAKX,SAAS,CAAEuD,KAAM9C,EAAMP,OAAOC,SA3DpB,EA8DnB+E,oBAAsB,SAACzE,GACnBA,EAAME,iBACN,EAAKX,SAAS,CAAEE,OAAQO,EAAMP,OAAOC,SAhEtB,EAmEnBgF,cAnEmB,uCAmEH,WAAO1E,GAAP,eAAAC,EAAA,yDACZD,EAAME,oBACFyE,EAAa,CACb,UAAa,EAAKvF,MAAM8B,KAAK0D,OAC7B,KAAQ,EAAKzE,MAAM2C,KACnB,cAAiB,EAAK3C,MAAMgE,sBAC5B,OAAU,EAAKhE,MAAMV,SAEVqD,KAAK1C,OAAS,GACtBuE,EAAWlF,OAAOW,OAAS,IACJ,QAAtBuE,EAAWlF,QAA2D,kBAAhC2E,SAASO,EAAWlF,UAC3DkF,EAAWE,cAAczE,OAAS,GAX7B,gCAYFC,MAAM,GAAD,OAAI,EAAKjB,MAAMkB,OAAf,wBAA6C,CACpDC,OAAQ,OACRC,KAAM,OACNC,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAY,EAAKrB,MAAM8B,KAAKG,OAEjDX,KAAMC,KAAKC,UAAU+D,KAEpB9D,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFS,QAAQC,IAAIV,GACZW,MAAM,gBACN,EAAKpC,SAAS,CACVuD,KAAM,GACNrD,OAAQ,GACR0E,sBAAuB,GACvBzE,MAAO,QAGd6B,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAhCtB,6BAmCRG,MAAM,wCAnCE,2CAnEG,wDA0GnBmD,gBAAkB,SAAC9E,GACfA,EAAME,iBACNG,MAAM,GAAD,OAAI,EAAKjB,MAAMkB,OAAf,aAAkC,CACnCC,OAAQ,MACRC,KAAM,OACNC,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAY,EAAKrB,MAAM8B,KAAKG,SAGhDR,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFS,QAAQC,IAAIV,GACZ,EAAKzB,SAAS,CAAEwF,YAAa/D,EAAOgE,UAEvCzD,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OAvH9B,EAAKrB,MAAQ,CACT8E,MAAO,KACPC,UAAU,EACVpC,KAAM,GACNrD,OAAQ,GACR0F,eAAgB,KAChBhB,sBAAuB,GACvBzE,MAAO,GACPqF,YAAa,MAVF,E,iFAcE,IAAD,OAChB1E,MAAM,GAAD,OAAIwB,KAAKzC,MAAMkB,OAAf,0BAA+C,CAChDC,OAAQ,MACRC,KAAM,OACNC,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAYoB,KAAKzC,MAAM8B,KAAKG,SAGhDR,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACG,SAACG,GACG,EAAKzB,SAAS,CACV2F,UAAU,EACVC,eAAgBnE,EAAOgE,OAE3BvD,QAAQC,IAAIV,EAAOgE,SAEvB,SAACC,GACG,EAAK1F,SAAS,CACV2F,UAAU,EACVD,e,2CAOhBxD,QAAQC,IAAIG,KAAK1B,MAAMgE,yB,+BAkFjB,IAAD,OACL,MAA6B,aAAzBtC,KAAKzC,MAAM8B,KAAKpB,MAChB6B,MAAM,aACC,kBAAC,IAAD,CAAUG,GAAG,OAEhBD,KAAK1B,MAAM8E,MACJ,+CACCpD,KAAK1B,MAAM+E,SAIf,yBAAKnD,UAAU,kBACX,kBAAC,IAAD,CAAMD,GAAG,KAAI,4BAAQC,UAAU,6BAAlB,iBAA0E,6BACvF,2CACA,0BAAMC,SAAUH,KAAK6C,eACjB,yBAAK3C,UAAU,YACX,yBAAKA,UAAU,SAAf,cACA,2BAAOA,UAAU,mBAAmBE,KAAK,OAAOvC,MAAOmC,KAAK1B,MAAM2C,KAAMX,SAAUN,KAAK2C,qBAE3F,yBAAKzC,UAAU,YACX,yBAAKA,UAAU,SAAf,WACA,2BAAOA,UAAU,mBAAmBE,KAAK,OAAOvC,MAAOmC,KAAK1B,MAAMV,OAAQ0C,SAAUN,KAAK4C,uBAE7F,8EACA,2BAAO1C,UAAU,SACb,+BACI,4BACI,wBAAIqD,MAAM,QACV,wBAAIA,MAAM,OAAV,YACA,wBAAIA,MAAM,OAAV,cAGPvD,KAAK1B,MAAMgF,eAAe5B,KAAI,SAACjE,EAAGmE,GAAJ,OAC3B,wBAAIC,IAAKD,GACL,4BACI,2BACIX,KAAMxD,EAAE6B,GACRc,KAAK,WACLgC,QAAS,EAAK9D,MAAMT,MAAM+D,GAC1BtB,SAAU,SAAAnC,GAAW,EAAKgE,qBAAqBhE,EAAOyD,OAG9D,4BAAKnE,EAAEkD,UACP,4BAAKlD,EAAEoD,eAKnB,4BAAQX,UAAU,kBAAkBE,KAAK,UAAzC,gBAEJ,6BACA,6BAC4B,OAA3BJ,KAAK1B,MAAM4E,YAAuB,4BAAQhD,UAAU,4BAA4B6B,QAAS/B,KAAKiD,iBAA5D,qBAA0G,KAC7I,2BAAO/C,UAAU,SACb,+BACgC,OAA3BF,KAAK1B,MAAM4E,YAAuB,KAC/B,4BACI,wBAAIK,MAAM,OAAV,cACA,wBAAIA,MAAM,OAAV,sBAIZ,+BACgC,OAA3BvD,KAAK1B,MAAM4E,YAAuB,KAAOlD,KAAK1B,MAAM4E,YAAYxB,KAAI,SAACjE,EAAGmE,GAAJ,OACjE,wBAAIC,IAAKD,GACL,4BAAKnE,EAAE6B,IACP,4BAAK7B,EAAEE,iBA1DxB,8C,GArIiB4C,aCAnBiD,E,YACjB,WAAYjG,GAAQ,IAAD,8BACf,4CAAMA,KACDe,MAAQ,GAFE,E,sEAOf,MAA6B,aAAzB0B,KAAKzC,MAAM8B,KAAKpB,MAChB6B,MAAM,aACC,kBAAC,IAAD,CAAUG,GAAG,OAGhB,yBAAKC,UAAU,kBACX,8CACA,yBAAKA,UAAU,QACX,kBAAC,IAAD,CAAMD,GAAG,oBACL,4BAAQC,UAAU,2BAAlB,sBAGR,yBAAKA,UAAU,QACX,kBAAC,IAAD,CAAMD,GAAG,gBACL,4BAAQC,UAAU,2BAAlB,kBAGR,yBAAKA,UAAU,QACX,kBAAC,IAAD,CAAMD,GAAG,4BACL,4BAAQC,UAAU,2BAAlB,gCAGR,yBAAKA,UAAU,QACX,kBAAC,IAAD,CAAMD,GAAG,kBACL,4BAAQC,UAAU,2BAAlB,yB,GAhCaK,aCAnCkD,E,YACF,WAAYlG,GAAQ,IAAD,8BACf,4CAAMA,KACDe,MAAQ,GAFE,E,sEAOf,OACI,yBAAK4B,UAAU,kBACX,8CACA,yBAAKA,UAAU,QACf,kBAAC,IAAD,CAAMD,GAAG,mBAAkB,4BAAQC,UAAU,mBAAlB,qBAE3B,6BACA,kBAAC,IAAD,CAAMD,GAAG,mBAAkB,4BAAQC,UAAU,gBAAlB,0B,GAfjBK,aAuBXmD,cAAWD,G,QCvBLE,E,YACjB,WAAYpG,GAAQ,IAAD,8BACf,4CAAMA,KA8CVqG,kBAAoB,SAACzF,EAAO0F,EAAY/B,GAEzB,YAAO,EAAKxD,MAAMwF,SACrBC,SAAQ,SAAAtG,GACRA,EAAEoG,aAAeA,IACjBpG,EAAEqE,SAAWA,MAGrBlC,QAAQC,IAAI,CAAEgE,aAAY/B,cAvDX,EA0DnB5D,aA1DmB,uCA0DJ,WAAOC,GAAP,SAAAC,EAAA,6DACXD,EAAME,iBADK,SAGLG,MAAM,GAAD,OAAI,EAAKjB,MAAMkB,OAAf,wBAA6C,CACpDC,OAAQ,OACRC,KAAM,OACNC,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAY,EAAKrB,MAAM8B,KAAKG,OAEjDX,KAAMC,KAAKC,UAAU,CACjBiF,OAAQ,EAAK1F,MAAM0F,OACnBC,UAAW,EAAK1G,MAAM8B,KAAK0D,OAC3Be,QAAS,EAAKxF,MAAMwF,YAGvB9E,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFS,QAAQC,IAAIV,GACZW,MAAM,wBACN,EAAKpC,SAAS,CAAEwG,cAAc,EAAMC,WAAYhF,EAAOiF,QAAQ,QAElE1E,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,MAtBnB,2CA1DI,sDAEf,EAAKrB,MAAQ,CACT8E,MAAO,KACPC,UAAU,EACVW,OAAQ,EAAKzG,MAAM8G,SAAS/F,MAAM0F,OAClCM,aAAc,GACdR,QAAS,GACTI,cAAc,EACdC,WAAY,MATD,E,iFAYE,IAAD,OAChB3F,MAAM,GAAD,OAAIwB,KAAKzC,MAAMkB,OAAf,qBAA0C,CAC3CC,OAAQ,OACRC,KAAM,OACNC,QAAS,CACL,eAAgB,mBAEhB,cAAiB,UAAYoB,KAAKzC,MAAM8B,KAAKG,OAEjDX,KAAMC,KAAKC,UAAU,CAAE,OAAUiB,KAAKzC,MAAM8G,SAAS/F,MAAM0F,WAE1DhF,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACG,SAACG,GACG,IAAIoF,EAAU,GACdpF,EAAOmF,aAAaP,SAAQ,SAAAtG,GACxB8G,EAAQnD,KAAK,CAAEyC,WAAYpG,EAAEoG,WAAY/B,SAAU,OAEvD,EAAKpE,SAAS,CACV2F,UAAU,EACVW,OAAQ7E,EAAO6E,OACfM,aAAcnF,EAAOmF,aACrBR,QAASS,IAEb3E,QAAQC,IAAIV,MAEhB,SAACiE,GACG,EAAK1F,SAAS,CACV2F,UAAU,EACVD,e,+BA0CV,IAAD,OACL,MAA6B,aAAzBpD,KAAKzC,MAAM8B,KAAKpB,MAChB6B,MAAM,aACC,kBAAC,IAAD,CAAUG,GAAG,OAEhBD,KAAK1B,MAAM8E,MACJ,+CACCpD,KAAK1B,MAAM+E,SAEZrD,KAAK1B,MAAM4F,aACX,kBAAC,IAAD,CAAUjE,GAAI,CACjBuE,SAAU,cACVrF,OAAQa,KAAK1B,MAAM6F,cAKnB,yBAAKjE,UAAU,kBACX,kBAAC,IAAD,CAAMD,GAAG,KAAI,4BAAQC,UAAU,6BAAlB,iBAA0E,6BACvF,wCAAcF,KAAK1B,MAAM0F,QACzB,0BAAM7D,SAAUH,KAAK9B,aAAcuG,IAAKzE,KAAK1B,MAAMoG,MAE3C1E,KAAK1B,MAAMgG,aAAa5C,KAAI,SAACiD,EAAM/C,GAAP,OACxB,yBAAK1B,UAAU,OAAO2B,IAAKD,GACvB,4BAAK+C,EAAK9D,UACT8D,EAAK3D,cAAcU,KAAI,SAACD,EAAQmD,GAAT,OACpB,yBAAK1E,UAAU,OAAO2B,IAAK+C,GACvB,2BAAOxE,KAAK,QAAQa,KAAM0D,EAAKd,WAC3BvD,SAAU,SAAAnC,GAAW,EAAKyF,kBAAkBzF,EAAOwG,EAAKd,WAAYpC,EAAOK,aAC9EL,EAAOA,eAM5B,2BAAOvB,UAAU,kBAAkBE,KAAK,SAASvC,MAAM,kBA3B5D,8C,GA5Fe0C,aCAjBsE,E,YACjB,WAAYtH,GAAQ,IAAD,8BACf,4CAAMA,KACDe,MAAQ,CACT8E,MAAO,KACPC,UAAU,EACVyB,aAAc,IALH,E,iFAQE,IAAD,OAChBtG,MAAM,GAAD,OAAIwB,KAAKzC,MAAMkB,OAAf,0BAA+C,CAChDC,OAAQ,OACRC,KAAM,OACNC,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAYoB,KAAKzC,MAAM8B,KAAKG,OAEjDX,KAAMC,KAAKC,UAAU,CAAEO,GAAIU,KAAKzC,MAAM8B,KAAK0D,WAE1C/D,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACG,SAACG,GACG,EAAKzB,SAAS,CACV2F,UAAU,EACVyB,aAAc3F,IAElBS,QAAQC,IAAIV,EAAOgE,SAEvB,SAACC,GACG,EAAK1F,SAAS,CACV2F,UAAU,EACVD,e,+BAOhB,MAA2B,aAAvBpD,KAAKzC,MAAM8B,KAAKpB,MAChB6B,MAAM,aACC,kBAAC,IAAD,CAAUG,GAAG,OACbD,KAAK1B,MAAM8E,MACX,+CACCpD,KAAK1B,MAAM+E,SAIf,yBAAKnD,UAAU,kBACX,kBAAC,IAAD,CAAMD,GAAG,KAAI,4BAAQC,UAAU,6BAAlB,iBAA0E,6BACvF,wBAAIA,UAAU,QAAd,iBACA,2BAAOA,UAAU,SACb,+BACI,4BACI,wBAAIqD,MAAM,OAAV,WACA,wBAAIA,MAAM,OAAV,aACA,wBAAIA,MAAM,OAAV,uBACA,wBAAIA,MAAM,UAGlB,+BACKvD,KAAK1B,MAAMwG,aAAapD,KAAI,SAACiD,EAAM/C,GAAP,OACzB,wBAAIC,IAAKD,GACL,wBAAI2B,MAAM,OAAOoB,EAAKrF,IACtB,4BAAKqF,EAAK1D,MACV,4BAAK0D,EAAKI,mBACV,4BACI,kBAAC,IAAD,CAAM9E,GAAI,CACNuE,SAAU,YACVlG,MAAO,CACH0F,OAAQW,EAAKrF,MAElB,4BAAQY,UAAU,2BAAlB,gBAOvB,8BAlCD,8C,GA5CyBK,aCAvByE,E,YACjB,WAAYzH,GAAQ,IAAD,8BACf,4CAAMA,KACDe,MAAQ,CACT8E,MAAO,KACPC,UAAU,GAJC,E,sFAQoB4B,IAA/BjF,KAAKzC,MAAM8G,SAASlF,QACpBa,KAAKtC,SAAS,CAAE0F,OAAO,IAEvBpD,KAAKzC,MAAM8G,SAASlF,QACpBa,KAAKtC,SAAS,CAAE2F,UAAU,M,+BAI9B,MAA6B,aAAzBrD,KAAKzC,MAAM8B,KAAKpB,MAChB6B,MAAM,aACC,kBAAC,IAAD,CAAUG,GAAG,OAEhBD,KAAK1B,MAAM8E,MACJ,+CACCpD,KAAK1B,MAAM+E,SAIf,yBAAKnD,UAAU,kBACX,kBAAC,IAAD,CAAMD,GAAG,KAAI,4BAAQC,UAAU,6BAAlB,iBAA0E,6BACvF,2CACA,uCAAY,2BAAIF,KAAKzC,MAAM8G,SAASlF,OAAO+F,QAC3C,6CAAmBlF,KAAKzC,MAAM8G,SAASlF,OAAOgG,MAC9C,2BAAOjF,UAAU,SACb,+BACI,4BACI,wBAAIqD,MAAM,OAAV,eACA,wBAAIA,MAAM,OAAV,eACA,wBAAIA,MAAM,OAAV,oBAGR,+BACKvD,KAAKzC,MAAM8G,SAASlF,OAAOiG,eAAe1D,KAAI,SAACjE,EAAGmE,GAAJ,OAC3C,4BACI,wBAAI2B,MAAM,OAAO3B,EAAQ,GACzB,4BAAKnE,EAAE4H,sBACP,4BAAK5H,EAAE6H,4BAIvB,8BAzBD,8C,GAxBiB/E,aCAnBgF,E,YACjB,WAAYhI,GAAQ,IAAD,8BACf,4CAAMA,KACDe,MAAQ,CACT8E,MAAO,KACPC,UAAU,EACVmC,KAAM,MALK,E,iFAQE,IAAD,OAChBhH,MAAM,GAAD,OAAIwB,KAAKzC,MAAMkB,OAAf,iCAAsD,CACvDC,OAAQ,OACRC,KAAM,OACNC,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAYoB,KAAKzC,MAAM8B,KAAKG,OAEjDX,KAAMC,KAAKC,UAAU,CACjBO,GAAIU,KAAKzC,MAAM8B,KAAK0D,WAGvB/D,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFS,QAAQC,IAAIV,GACZ,EAAKzB,SAAS,CAAE2F,UAAU,EAAMmC,KAAMrG,EAAOgE,UAEhDzD,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,+BAI9B,MAA6B,aAAzBK,KAAKzC,MAAM8B,KAAKpB,MAChB6B,MAAM,aACC,kBAAC,IAAD,CAAUG,GAAG,OAEhBD,KAAK1B,MAAM8E,MACJ,+CACCpD,KAAK1B,MAAM+E,SAIf,yBAAKnD,UAAU,kBACX,kBAAC,IAAD,CAAMD,GAAG,KAAI,4BAAQC,UAAU,6BAAlB,iBAA0E,6BACvF,wBAAIA,UAAU,QAAd,mBACA,2BAAOA,UAAU,SACb,+BACI,4BACI,wBAAIqD,MAAM,OAAV,aACA,wBAAIA,MAAM,OAAV,WACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,oBAGR,+BACKvD,KAAK1B,MAAMkH,KAAK9D,KAAI,SAACjE,EAAGmE,GAAJ,OACjB,wBAAIC,IAAKD,GACL,wBAAI2B,MAAM,OAAO9F,EAAE6B,IACnB,4BAAK7B,EAAEuG,QACP,4BAAKvG,EAAEyH,OACP,4BAAKzH,EAAE0H,YAIvB,8BAzBD,8C,GArCqB5E,aCAvBkF,E,YACjB,WAAYlI,GAAQ,IAAD,8BACf,4CAAMA,KACDe,MAAQ,CACT8E,MAAO,KACPC,UAAU,EACVmC,KAAM,MALK,E,iFAQE,IAAD,OAChBhH,MAAM,GAAD,OAAIwB,KAAKzC,MAAMkB,OAAf,0BAA+C,CAChDC,OAAQ,MACRC,KAAM,OACNC,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAYoB,KAAKzC,MAAM8B,KAAKG,SAGhDR,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFS,QAAQC,IAAIV,GACZ,EAAKzB,SAAS,CAAE2F,UAAU,EAAMmC,KAAMrG,EAAOuG,kBAEhDhG,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,+BAI9B,OAAIK,KAAK1B,MAAM8E,MACJ,+CACCpD,KAAK1B,MAAM+E,SAGU,aAAzBrD,KAAKzC,MAAM8B,KAAKpB,MAChB6B,MAAM,aACC,kBAAC,IAAD,CAAUG,GAAG,OAGhB,yBAAKC,UAAU,kBACX,kBAAC,IAAD,CAAMD,GAAG,KAAI,4BAAQC,UAAU,6BAAlB,iBAA0E,6BACvF,8CACA,2BAAOA,UAAU,SACb,+BACI,4BACI,wBAAIqD,MAAM,OAAV,aACA,wBAAIA,MAAM,OAAV,WACA,wBAAIA,MAAM,OAAV,cACA,wBAAIA,MAAM,OAAV,oBACA,wBAAIA,MAAM,OAAV,SACA,wBAAIA,MAAM,OAAV,kBACA,wBAAIA,MAAM,UAGlB,+BACKvD,KAAK1B,MAAMkH,KAAK9D,KAAI,SAACjE,EAAGmE,GAAJ,OACjB,wBAAIC,IAAKD,GACL,wBAAI2B,MAAM,OAAO9F,EAAE6B,IACnB,4BAAK7B,EAAEuG,QACP,4BAAKvG,EAAEwG,WACP,4BAAKxG,EAAEkI,iBACP,4BAAKlI,EAAEyH,OACP,4BAAKzH,EAAE0H,MACP,4BAAI,kBAAC,IAAD,CAAMjF,UAAU,eAAeD,GAAI,CACnCuE,SAAU,qBACVlF,GAAI7B,EAAE6B,KAFN,uBASpB,8BAxCL,8C,GA9BwBiB,aCAtByE,E,YACjB,WAAYzH,GAAQ,IAAD,8BACf,4CAAMA,KACDe,MAAQ,CACT8E,MAAO,KACPC,UAAU,EACVmC,KAAM,MALK,E,iFAQE,IAAD,OAChBhH,MAAM,GAAD,OAAIwB,KAAKzC,MAAMkB,OAAf,iCAA8CuB,KAAKzC,MAAM8G,SAAS/E,IAAM,CACzEZ,OAAQ,MACRC,KAAM,OACNC,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAYoB,KAAKzC,MAAM8B,KAAKG,SAGhDR,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFS,QAAQC,IAAIV,GACZ,EAAKzB,SAAS,CAAE2F,UAAU,EAAMmC,KAAMrG,EAAOiF,QAAQ,QAExD1E,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,Q,+BAG9B,MAA6B,aAAzBK,KAAKzC,MAAM8B,KAAKpB,MAChB6B,MAAM,aACC,kBAAC,IAAD,CAAUG,GAAG,OAEhBD,KAAK1B,MAAM8E,MACJ,+CACCpD,KAAK1B,MAAM+E,SAIf,yBAAKnD,UAAU,kBACX,kBAAC,IAAD,CAAMD,GAAG,KAAI,4BAAQC,UAAU,6BAAlB,iBAA0E,6BACvF,iDACA,2CAAiBF,KAAK1B,MAAMkH,KAAKlG,IACjC,yCAAeU,KAAK1B,MAAMkH,KAAKxB,QAC/B,4CAAkBhE,KAAK1B,MAAMkH,KAAKvB,WAClC,kDAAwBjE,KAAK1B,MAAMkH,KAAKG,iBACxC,uCAAY,2BAAI3F,KAAK1B,MAAMkH,KAAKN,QAChC,6CAAmBlF,KAAK1B,MAAMkH,KAAKL,MACnC,2BAAOjF,UAAU,SACb,+BACI,4BACI,wBAAIqD,MAAM,OAAV,eACA,wBAAIA,MAAM,OAAV,oBACA,wBAAIA,MAAM,OAAV,oBAGR,+BACKvD,KAAK1B,MAAMkH,KAAKJ,eAAe1D,KAAI,SAACjE,EAAGmE,GAAJ,OAChC,4BACI,wBAAI2B,MAAM,OAAO3B,EAAQ,GACzB,4BAAKnE,EAAE4H,sBACP,4BAAK5H,EAAE6H,4BAIvB,6BACA,kBAAC,IAAD,CAAMrF,GAAG,kBAAiB,4BAAQC,UAAU,6BAAlB,4BA9B3B,8C,GAjCiBK,a,QCAnBqF,E,YACjB,WAAYrI,GAAQ,IAAD,8BACf,4CAAMA,KAyCVsI,mBAAqB,SAAC1H,GAClBA,EAAME,iBACN,EAAKX,SAAL,eAAiBS,EAAMP,OAAOqD,KAAO9C,EAAMP,OAAOC,SA5CnC,EA+CnBgF,cA/CmB,uCA+CH,WAAO1E,GAAP,eAAAC,EAAA,yDACZD,EAAME,oBACFyE,EAAa,CACb,UAAa,EAAKvF,MAAM8B,KAAK0D,OAC7B,KAAQ,EAAKzE,MAAM2C,KACnB,SAAY,EAAK3C,MAAMqC,SACvB,kBAAqB,EAAKrC,MAAMyG,kBAChC,OAAU,EAAKzG,MAAMV,SAEVqD,KAAK1C,OAAS,GACtBuE,EAAWlF,OAAOW,OAAS,IACJ,QAAtBuE,EAAWlF,QAA2D,kBAAhC2E,SAASO,EAAWlF,UAC3DkF,EAAWiC,kBAAoB,GAZ1B,gCAaFvG,MAAM,GAAD,OAAI,EAAKjB,MAAMkB,OAAf,oCAAyD,CAChEC,OAAQ,OACRC,KAAM,OACNC,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAY,EAAKrB,MAAM8B,KAAKG,OAEjDX,KAAMC,KAAKC,UAAU+D,KAEpB9D,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFS,QAAQC,IAAIV,GACQ,IAAhBA,EAAO2G,MACPhG,MAAM,gBACN,EAAKpC,SAAS,CACVuD,KAAM,GACNrD,OAAQ,GACR+C,SAAU,GACVoE,kBAAmB,KAEA,IAAhB5F,EAAO2G,MAA6B,qFAAf3G,EAAOQ,IACnCG,MAAMX,EAAOQ,KAGbG,MAAM,2BAGbJ,OAAM,SAAAC,GACHC,QAAQC,IAAIF,GACZG,MAAM,2BA1CN,6BA8CRA,MAAM,wCA9CE,2CA/CG,wDAiGnBmD,gBAAkB,SAAC9E,GACfA,EAAME,iBACNG,MAAM,GAAD,OAAI,EAAKjB,MAAMkB,OAAf,aAAkC,CACnCC,OAAQ,MACRC,KAAM,OACNC,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAY,EAAKrB,MAAM8B,KAAKG,SAGhDR,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFS,QAAQC,IAAIV,GACZ,EAAKzB,SAAS,CAAEwF,YAAa/D,EAAOgE,UAEvCzD,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OA9G9B,EAAKrB,MAAQ,CACT8E,MAAO,KACPC,UAAU,EACVpC,KAAM,GACNrD,OAAQ,GACR+C,SAAU,GACVoE,kBAAmB,EACnBgB,mBAAoB,GACpB7C,YAAa,MAVF,E,iFAcE,IAAD,OAChB1E,MAAM,GAAD,OAAIwB,KAAKzC,MAAMkB,OAAf,gCAAqD,CACtDC,OAAQ,MACRC,KAAM,OACNC,QAAS,CACL,eAAgB,mBAChB,cAAiB,UAAYoB,KAAKzC,MAAM8B,KAAKG,SAGhDR,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MACG,SAACG,GACG,EAAKzB,SAAS,CACV2F,UAAU,EACV0C,mBAAoB5G,EAAOgE,KAC3BxC,SAAUxB,EAAOgE,KAAK,KAE1BvD,QAAQC,IAAIV,EAAOgE,SAEvB,SAACC,GACG,EAAK1F,SAAS,CACV2F,UAAU,EACVD,e,+BAgFhB,MAA6B,aAAzBpD,KAAKzC,MAAM8B,KAAKpB,MAChB6B,MAAM,aACC,kBAAC,IAAD,CAAUG,GAAG,OAEhBD,KAAK1B,MAAM8E,MACJ,+CACCpD,KAAK1B,MAAM+E,SAIf,yBAAKnD,UAAU,kBACX,kBAAC,IAAD,CAAMD,GAAG,KAAI,4BAAQC,UAAU,6BAAlB,iBAA0E,6BACvF,wBAAIA,UAAU,QAAd,6BACA,0BAAMC,SAAUH,KAAK6C,eACjB,yBAAK3C,UAAU,YACX,yBAAKA,UAAU,SAAf,cACA,2BAAOA,UAAU,mBAAmBE,KAAK,OAAOa,KAAK,OAAOpD,MAAOmC,KAAK1B,MAAM2C,KAAMX,SAAUN,KAAK6F,sBAEvG,yBAAK3F,UAAU,YACX,yBAAKA,UAAU,SAAf,aACA,4BAAQA,UAAU,qBAAqBe,KAAK,WAAWgB,aAAcjC,KAAK1B,MAAMyH,mBAAmB,GAAIlI,MAAOmC,KAAK1B,MAAMqC,SAAUL,SAAUN,KAAK6F,oBAC7I7F,KAAK1B,MAAMyH,mBAAmBrE,KAAI,SAACjE,EAAGmE,GAAJ,OAAc,4BAAQ/D,MAAOJ,EAAGoE,IAAKD,GAAQnE,QAGxF,yBAAKyC,UAAU,YACX,yBAAKA,UAAU,SAAf,yBACA,2BAAOA,UAAU,mBAAmBE,KAAK,SAASa,KAAK,oBAAoBpD,MAAOmC,KAAK1B,MAAMyG,kBAAmBzE,SAAUN,KAAK6F,sBAEnI,yBAAK3F,UAAU,YACX,yBAAKA,UAAU,SAAf,WACA,2BAAOA,UAAU,mBAAmBE,KAAK,OAAOa,KAAK,SAASpD,MAAOmC,KAAK1B,MAAMV,OAAQ0C,SAAUN,KAAK6F,sBAE3G,8EACA,yBAAK3F,UAAU,QAAO,4BAAQA,UAAU,kBAAkBE,KAAK,UAAzC,iBAE1B,6BACA,6BAC4B,OAA3BJ,KAAK1B,MAAM4E,YAAuB,4BAAQhD,UAAU,4BAA4B6B,QAAS/B,KAAKiD,iBAA5D,qBAA0G,KAC7I,2BAAO/C,UAAU,SACb,+BACgC,OAA3BF,KAAK1B,MAAM4E,YAAuB,KAC/B,4BACI,wBAAIK,MAAM,OAAV,cACA,wBAAIA,MAAM,OAAV,sBAIZ,+BACgC,OAA3BvD,KAAK1B,MAAM4E,YAAuB,KAAOlD,KAAK1B,MAAM4E,YAAYxB,KAAI,SAACjE,EAAGmE,GAAJ,OACjE,wBAAIC,IAAKD,GACL,4BAAKnE,EAAE6B,IACP,4BAAK7B,EAAEE,iBA5CxB,8C,GA5H6B4C,aCkMrCyF,E,YAlLb,WAAYzI,GAAQ,IAAD,8BACjB,4CAAMA,KA4CR6B,oBAAsB,SAAC2D,GACrB,EAAKrF,SAAS,CAAE2B,KAAK,eAAM,EAAKf,MAAMe,KAAlB,CAAwB0D,OAAQA,OA9CnC,EAgDnBxD,mBAAqB,SAACC,GACpB,EAAK9B,SAAS,CAAE2B,KAAK,eAAM,EAAKf,MAAMe,KAAlB,CAAwBG,MAAOA,OAjDlC,EAmDnBxB,kBAAoB,SAACC,GACnB,EAAKP,SAAS,CAAE2B,KAAK,eAAM,EAAKf,MAAMe,KAAlB,CAAwBpB,KAAMA,OApDjC,EAsDnBgI,kBAAoB,SAACjC,GAEnB,OADA,EAAKtG,SAAL,eAAmB,EAAKY,MAAMe,KAA9B,CAAoC6G,WAAYlC,KACzC,kBAAC,IAAD,CAAU/D,GAAG,eAtDpB,EAAK3B,MAAQ,CACXG,OAAQ,4CAERY,KAAM,CACJ0D,OAAQ,KACR9E,KAAM,GACNuB,MAAO,GACP0G,WAAY,MAEdC,YAAa,SAAAC,GAAW,OACtB,kBAAC,EAAD,iBAAWA,EAAX,CACE3H,OAAQ,EAAKH,MAAMG,OAAQY,KAAM,EAAKf,MAAMe,KAC5CD,oBAAqB,EAAKA,oBAC1BG,mBAAoB,EAAKA,mBACzBvB,kBAAmB,EAAKA,sBAG5BqI,aAAc,IAnBC,E,kFAsBG,IAAD,OACnBzG,QAAQC,IAAIG,KAAK1B,MAAMe,MACnBW,KAAK1B,MAAMe,KAAKG,MAAMjB,OAAS,GAA8B,aAAzByB,KAAK1B,MAAMe,KAAKpB,MAAmD,aAA5B+B,KAAK1B,MAAM+H,cACxFrG,KAAKtC,SAAS,CACZ2I,aAAc,WACdF,YAAa,SAAAC,GAAW,OACtB,kBAAC,EAAD,iBAAiBA,EAAjB,CACE3H,OAAQ,EAAKH,MAAMG,OAAQY,KAAM,EAAKf,MAAMe,WAKhDW,KAAK1B,MAAMe,KAAKG,MAAMjB,OAAS,GAA8B,aAAzByB,KAAK1B,MAAMe,KAAKpB,MAAmD,aAA5B+B,KAAK1B,MAAM+H,cACxFrG,KAAKtC,SAAS,CACZ2I,aAAc,WACdF,YAAa,SAAAC,GAAW,OACtB,kBAAC,EAAD,iBAAiBA,EAAjB,CACE3H,OAAQ,EAAKH,MAAMG,OAAQY,KAAM,EAAKf,MAAMe,a,+BAoB5C,IAAD,OACP,OACE,oCACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEiH,KAAK,IACLC,OAAK,EACLC,OAAQxG,KAAK1B,MAAM6H,cAGrB,kBAAC,IAAD,CACEG,KAAK,YACLC,OAAK,EACLC,OAAQ,SAAAJ,GAAW,OACjB,kBAAC,EAAD,iBAAcA,EAAd,CACE3H,OAAQ,EAAKH,MAAMG,OAAQY,KAAM,EAAKf,MAAMe,KAC5CrB,kBAAmB,EAAKA,wBAK9B,kBAAC,IAAD,CACEsI,KAAK,mBACLC,OAAK,EACLC,OAAQ,SAAAJ,GAAW,OACjB,kBAAC,EAAD,iBAAoBA,EAApB,CACE3H,OAAQ,EAAKH,MAAMG,OAAQY,KAAM,EAAKf,MAAMe,WAKlD,kBAAC,IAAD,CACEiH,KAAK,eACLC,OAAK,EACLC,OAAQ,SAAAJ,GAAW,OACjB,kBAAC,EAAD,iBAAgBA,EAAhB,CACE3H,OAAQ,EAAKH,MAAMG,OAAQY,KAAM,EAAKf,MAAMe,WAKlD,kBAAC,IAAD,CACEiH,KAAK,2BACLC,OAAK,EACLC,OAAQ,SAAAJ,GAAW,OACjB,kBAAC,EAAD,iBAA4BA,EAA5B,CACE3H,OAAQ,EAAKH,MAAMG,OAAQY,KAAM,EAAKf,MAAMe,WAKlD,kBAAC,IAAD,CACEiH,KAAK,YACLC,OAAK,EACLC,OAAQ,SAAAJ,GAAW,OACjB,kBAAC,EAAD,iBAAcA,EAAd,CACE3H,OAAQ,EAAKH,MAAMG,OAAQY,KAAM,EAAKf,MAAMe,KAC5C6G,WAAY,EAAK5H,MAAMe,KAAK6G,iBAKlC,kBAAC,IAAD,CACEI,KAAK,kBACLC,OAAK,EACLC,OAAQ,SAAAJ,GAAW,OACjB,kBAAC,EAAD,iBAAoBA,EAApB,CACE3H,OAAQ,EAAKH,MAAMG,OAAQY,KAAM,EAAKf,MAAMe,KAC5C4G,kBAAmB,EAAKA,wBAK9B,kBAAC,IAAD,CACEK,KAAK,cACLC,OAAK,EACLC,OAAQ,SAAAJ,GAAW,OACjB,kBAAC,EAAD,iBAAgBA,EAAhB,CACE3H,OAAQ,EAAKH,MAAMG,OAAQY,KAAM,EAAKf,MAAMe,WAKlD,kBAAC,IAAD,CACEiH,KAAK,kBACLC,OAAK,EACLC,OAAQ,SAAAJ,GAAW,OACjB,kBAAC,EAAD,iBAAoBA,EAApB,CACE3H,OAAQ,EAAKH,MAAMG,OAAQY,KAAM,EAAKf,MAAMe,WAKlD,kBAAC,IAAD,CACEiH,KAAK,iBACLC,OAAK,EACLC,OAAQ,SAAAJ,GAAW,OACjB,kBAAC,EAAD,iBAAmBA,EAAnB,CACE3H,OAAQ,EAAKH,MAAMG,OAAQY,KAAM,EAAKf,MAAMe,WAKlD,kBAAC,IAAD,CACEiH,KAAK,qBACLC,OAAK,EACLC,OAAQ,SAAAJ,GAAW,OACjB,kBAAC,EAAD,iBAAuBA,EAAvB,CACE3H,OAAQ,EAAKH,MAAMG,OAAQY,KAAM,EAAKf,MAAMe,iB,GAxK1CoH,IAAMlG,WCNJmG,QACW,cAA7BC,OAAOtC,SAASuC,UAEe,UAA7BD,OAAOtC,SAASuC,UAEhBD,OAAOtC,SAASuC,SAASC,MACvB,2DCZNC,IAASN,OAAO,kBAAC,EAAD,MAASO,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBnI,MAAK,SAAAoI,GACJA,EAAaC,gBAEd3H,OAAM,SAAA0D,GACLxD,QAAQwD,MAAMA,EAAMkE,c","file":"static/js/main.f8ed3c50.chunk.js","sourcesContent":["import { createBrowserHistory } from 'history'\r\n\r\nexport default createBrowserHistory({\r\n})","import React, { Component } from \"react\";\r\nimport { Link, useHistory, Redirect } from \"react-router-dom\";\r\n\r\nexport default class Login extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            role: \"students\",\r\n            redirect: false\r\n        }\r\n    }\r\n    usernameChangeHandler = (e) => {\r\n        this.setState({ username: e.target.value })\r\n    }\r\n    passwordChangeHandler = (e) => {\r\n        this.setState({ password: e.target.value })\r\n    }\r\n    roleChangeHandler = (e) => {\r\n        this.setState({ role: e.target.value })\r\n    }\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (this.state.username.length > 0 && this.state.password.length > 0) {\r\n            await fetch(`${this.props.domain}/${this.state.role}/login`, {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ username: this.state.username, password: this.state.password })\r\n            })\r\n                .then(res => res.json())\r\n                .then(result => {\r\n                    this.props.userIdChangeHandler(result.user.id);\r\n                    this.props.tokenChangeHandler(result.token);\r\n                    this.props.roleChangeHandler(this.state.role);\r\n                    this.setState({ redirect: true });\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    alert(\"Wrong username, password or role.\")\r\n                });\r\n        }\r\n        console.log(this.props.user);\r\n\r\n    }\r\n    goToRegister = (event) => {\r\n        event.preventDefault();\r\n    }\r\n\r\n    render() {\r\n        if (this.state.redirect) {\r\n            return <Redirect to=\"/\"></Redirect>\r\n        }\r\n        return (\r\n            <div className=\"container mt-4\">\r\n                <h2>Login</h2>\r\n                <form onSubmit={this.handleSubmit} >\r\n                    <div className=\"form-group\">\r\n                        <label>Username:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.username} placeholder=\"Username\" onChange={this.usernameChangeHandler} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password:</label>\r\n                        <input type=\"password\" className=\"form-control\" value={this.state.password} placeholder=\"Password\" onChange={this.passwordChangeHandler} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Your role: </label>\r\n                        <select className=\"form-control\" value={this.state.role} onChange={this.roleChangeHandler}>\r\n                            <option value=\"students\">student</option>\r\n                            <option value=\"teachers\">teacher</option>\r\n                        </select>\r\n                    </div>\r\n                    <input className=\"btn\" type=\"submit\" value=\"Login\" />\r\n                    <div className=\"mt-4 mb-2\">Not registerd? Go to register!</div>\r\n                    <Link to=\"/register\"><button className=\"btn\"> Register</button></Link>\r\n                </form >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nexport default class Register extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            username: \"\",\r\n            password: \"\",\r\n            role: \"students\",\r\n        }\r\n    }\r\n    usernameChangeHandler = (e) => {\r\n        this.setState({ username: e.target.value })\r\n    }\r\n    passwordChangeHandler = (e) => {\r\n        this.setState({ password: e.target.value })\r\n    }\r\n    roleChangeHandler = (e) => {\r\n        this.setState({ role: e.target.value })\r\n    }\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (this.state.username.length > 0 && this.state.password.length > 0) {\r\n            await fetch(`${this.props.domain}/${this.state.role}`, {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                headers: {\r\n                    'Content-Type': 'application/json'\r\n                },\r\n                body: JSON.stringify({ username: this.state.username, password: this.state.password })\r\n            })\r\n                .then(res => res.json())\r\n                .then(result => {\r\n                    console.log(result);\r\n                    alert(\"Registration success!\")\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    alert(\"An error occured: \", err)\r\n                });\r\n        }\r\n        console.log(this.props.user);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container mt-4\">\r\n                <h2>Register</h2>\r\n                <form onSubmit={this.handleSubmit} >\r\n                    <div className=\"form-group\">\r\n                        <label>Username:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.username} placeholder=\"Username\" onChange={this.usernameChangeHandler} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Password:</label>\r\n                        <input type=\"text\" className=\"form-control\" value={this.state.password} placeholder=\"Password\" onChange={this.passwordChangeHandler} />\r\n                    </div>\r\n                    <div className=\"form-group\">\r\n                        <label>Your role: </label>\r\n                        <select className=\"form-control\" value={this.state.role} onChange={this.roleChangeHandler}>\r\n                            <option value=\"students\">student</option>\r\n                            <option value=\"teachers\">teacher</option>\r\n                        </select>\r\n                    </div>\r\n                    <div>\r\n                        <input className=\"btn btn-primary\" type=\"submit\" value=\"Register\" />\r\n                    </div>\r\n                    <div className=\"mt-4\">\r\n                        <Link to=\"/\" ><button className=\"btn\">Go to login page</button></Link>\r\n                    </div>\r\n\r\n                </form >\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n","import React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nexport default class CreateQuestion extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            category: \"\",\r\n            question: \"\",\r\n            correctAnswerNo: 1,\r\n            answerOptions: [{ \"answerNo\": 1, \"answer\": \"\" }]\r\n        }\r\n    }\r\n    categoryChangeHandler = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ category: event.target.value })\r\n    }\r\n    questionChangeHandler = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ question: event.target.value })\r\n    }\r\n    answerChangeHandler = (event) => {\r\n        event.preventDefault();\r\n        let optionsArray = this.state.answerOptions;\r\n        optionsArray[event.target.name.slice(8) - 1] = { \"answerNo\": event.target.name.slice(8), \"answer\": event.target.value }\r\n        this.setState({ ...this.state, answerOptions: optionsArray })\r\n    }\r\n    addAnswer = (event) => {\r\n        event.preventDefault();\r\n        let optionsArray = this.state.answerOptions;\r\n        optionsArray.push({ \"answerNo\": optionsArray.length + 1, \"answer\": \"\" })\r\n        this.setState({ ...this.state, answerOptions: optionsArray })\r\n    }\r\n    correctAnswerChangeHandler = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ correctAnswerNo: event.target.value })\r\n    }\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        if (this.state.category.length > 0\r\n            && this.state.question.length > 0\r\n            && !this.state.answerOptions.find(element => element.answer.length === 0)) {\r\n            await fetch(`${this.props.domain}/teachers/addQuestion`, {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': \"Bearer \" + this.props.user.token\r\n                },\r\n                body: JSON.stringify(this.state)\r\n            })\r\n                .then(res => res.json())\r\n                .then(result => {\r\n                    alert('Create question success!');\r\n                    console.log(result);\r\n                    this.setState({\r\n                        category: \"\",\r\n                        question: \"\",\r\n                        correctAnswerNo: 1,\r\n                        answerOptions: [{ \"answerNo\": 1, \"answer\": \"\" }]\r\n                    });\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n        else {\r\n            alert(\"Some fields are not filled correctly\")\r\n        }\r\n    }\r\n    render() {\r\n        if (this.props.user.role !== \"teachers\") {\r\n            alert(\"Forbidden\")\r\n            return <Redirect to=\"/\" />\r\n        } else {\r\n            return (\r\n                <div className=\"container mt-4\">\r\n                    <Link to=\"/\"><button className=\"btn btn-outline-secondary\">Back to menu</button></Link><br />\r\n                    <h2>Create a question</h2>\r\n                    <form onSubmit={this.handleSubmit} >\r\n                        <div className=\"form-group\">\r\n                            <label>Category:</label>\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Category\" value={this.state.category} onChange={this.categoryChangeHandler} />\r\n                        </div>\r\n                        <div className=\"form-group\">\r\n                            <label>Question:</label>\r\n                            <input type=\"text\" className=\"form-control\" placeholder=\"Question\" value={this.state.question} onChange={this.questionChangeHandler} />\r\n                        </div>\r\n                        <table className=\"table\">\r\n                            {this.state.answerOptions.map((option, index) =>\r\n                                <tr key={index}>\r\n                                    <td >Answer {this.state.answerOptions[index].answerNo}:</td>\r\n                                    <td><input type=\"text\"\r\n                                        name={\"answerNo\" + this.state.answerOptions[index].answerNo}\r\n                                        value={this.state.answerOptions[index].answer}\r\n                                        onChange={this.answerChangeHandler} /></td>\r\n\r\n                                </tr>\r\n                            )}\r\n                        </table>\r\n                        <button className=\"btn btn-secondary\" onClick={this.addAnswer}>+</button><br />\r\n                        <div className=\"form-row\">\r\n                            <div className=\"col-3\">Correct answer: Answer &nbsp;</div>\r\n                            <div className=\"col-3\">\r\n                                <select class=\"form-control\" defaultValue={this.state.answerOptions[0].answerNo} onChange={this.props.roleChangeHandler}>\r\n                                    {this.state.answerOptions.map((option, index) => (\r\n                                        <option value={option.answerNo} key={index}>{option.answerNo}</option>\r\n                                    ))}\r\n                                </select>\r\n                            </div>\r\n                        </div>\r\n                        <br />\r\n                        <input className=\"btn btn-primary\" type=\"submit\" value=\"Create question\" />\r\n                        <br />\r\n                    </form >\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nexport default class CreateExam extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            name: \"\",\r\n            target: \"\",\r\n            questionsArray: null,\r\n            selectedQuestionArray: [],\r\n            value: [],\r\n            studentList: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${this.props.domain}/teachers/getQuestions`, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': \"Bearer \" + this.props.user.token\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        questionsArray: result.rows\r\n                    });\r\n                    console.log(result.rows)\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        console.log(this.state.selectedQuestionArray);\r\n    }\r\n\r\n    toggleQuestionSelect = (event, index) => {\r\n        let value = this.state.value;\r\n        value[index] = event.target.checked;\r\n        let selected = this.state.selectedQuestionArray;\r\n        if (event.target.checked) {\r\n            selected.push(parseInt(event.target.name));\r\n        } else {\r\n            selected.splice(selected.findIndex(k => k === event.target.name), 1);\r\n        }\r\n        this.setState({ value, selectedQuestionArray: selected });\r\n    }\r\n\r\n    nameChangeHandler = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ name: event.target.value })\r\n    }\r\n\r\n    targetChangeHandler = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ target: event.target.value })\r\n    }\r\n\r\n    submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        let examObject = {\r\n            \"teacherId\": this.props.user.userId,\r\n            \"name\": this.state.name,\r\n            \"questionsList\": this.state.selectedQuestionArray,\r\n            \"target\": this.state.target\r\n        }\r\n        if (examObject.name.length > 0\r\n            && examObject.target.length > 0\r\n            && (examObject.target === \"all\" || typeof parseInt(examObject.target) === \"number\")\r\n            && examObject.questionsList.length > 0) {\r\n            await fetch(`${this.props.domain}/teachers/createExam`, {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': \"Bearer \" + this.props.user.token\r\n                },\r\n                body: JSON.stringify(examObject)\r\n            })\r\n                .then(res => res.json())\r\n                .then(result => {\r\n                    console.log(result);\r\n                    alert(\"Exam created\");\r\n                    this.setState({\r\n                        name: \"\",\r\n                        target: \"\",\r\n                        selectedQuestionArray: [],\r\n                        value: []\r\n                    })\r\n                })\r\n                .catch(err => console.log(err));\r\n        }\r\n        else {\r\n            alert(\"Some fields are not filled correctly\")\r\n        }\r\n    }\r\n\r\n    getStudentsList = (event) => {\r\n        event.preventDefault();\r\n        fetch(`${this.props.domain}/students`, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': \"Bearer \" + this.props.user.token\r\n            },\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                console.log(result);\r\n                this.setState({ studentList: result.rows })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        if (this.props.user.role !== \"teachers\") {\r\n            alert(\"Forbidden\")\r\n            return <Redirect to=\"/\" />\r\n        } else\r\n            if (this.state.error) {\r\n                return <div>Error happened</div>;\r\n            } else if (!this.state.isLoaded) {\r\n                return <h5>Loading...</h5>;\r\n            } else {\r\n                return (\r\n                    <div className=\"container mt-4\">\r\n                        <Link to=\"/\"><button className=\"btn btn-outline-secondary\">Back to menu</button></Link><br />\r\n                        <h2>Create Exam</h2>\r\n                        <form onSubmit={this.submitHandler}>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col-3\">Exam name:</div>\r\n                                <input className=\"form-control col\" type=\"text\" value={this.state.name} onChange={this.nameChangeHandler}></input>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col-3\">Target:</div>\r\n                                <input className=\"form-control col\" type=\"text\" value={this.state.target} onChange={this.targetChangeHandler}></input>\r\n                            </div>\r\n                            <small>Target can only be \"all\" or a student's id</small>\r\n                            <table className=\"table\">\r\n                                <thead>\r\n                                    <tr>\r\n                                        <th scope=\"col\"></th>\r\n                                        <th scope=\"col\">Category</th>\r\n                                        <th scope=\"col\">Question</th>\r\n                                    </tr>\r\n                                </thead>\r\n                                {this.state.questionsArray.map((e, index) =>\r\n                                    <tr key={index}>\r\n                                        <td>\r\n                                            <input\r\n                                                name={e.id}\r\n                                                type=\"checkbox\"\r\n                                                checked={this.state.value[index]}\r\n                                                onChange={event => { this.toggleQuestionSelect(event, index) }}\r\n                                            />\r\n                                        </td>\r\n                                        <td>{e.category}</td>\r\n                                        <td>{e.question}</td>\r\n                                    </tr>\r\n\r\n                                )}\r\n                            </table>\r\n                            <button className=\"btn btn-primary\" type=\"submit\">Create exam</button>\r\n                        </form>\r\n                        <br />\r\n                        <hr></hr>\r\n                        {this.state.studentList === null ? <button className=\"btn btn-outline-secondary\" onClick={this.getStudentsList}>Get students list</button> : null}\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                {this.state.studentList === null ? null :\r\n                                    <tr>\r\n                                        <th scope=\"col\">Student id</th>\r\n                                        <th scope=\"col\">Student username</th>\r\n                                    </tr>\r\n                                }\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.studentList === null ? null : this.state.studentList.map((e, index) =>\r\n                                    <tr key={index}>\r\n                                        <td>{e.id}</td>\r\n                                        <td>{e.username}</td>\r\n                                    </tr>\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nexport default class TeacherMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    render() {\r\n        if (this.props.user.role !== \"teachers\") {\r\n            alert(\"Forbidden\")\r\n            return <Redirect to=\"/\" />\r\n        } else {\r\n            return (\r\n                <div className=\"container mt-4\">\r\n                    <h2>Teacher's menu</h2>\r\n                    <div className=\"mt-3\">\r\n                        <Link to=\"/createQuestions\">\r\n                            <button className=\"btn btn-outline-success\">Create questions</button>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                        <Link to=\"/createExams\">\r\n                            <button className=\"btn btn-outline-success\">Create exams</button>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                        <Link to=\"/createExamsWithCategory\">\r\n                            <button className=\"btn btn-outline-primary\">Create exams with category</button>\r\n                        </Link>\r\n                    </div>\r\n                    <div className=\"mt-3\">\r\n                        <Link to=\"/schoolResults\">\r\n                            <button className=\"btn btn-outline-warning\">School results</button>\r\n                        </Link>\r\n                    </div>\r\n                </div>\r\n            )\r\n        }\r\n\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link, Redirect, withRouter } from 'react-router-dom'\r\n\r\nclass StudentMenu extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n\r\n        };\r\n    }\r\n    render() {\r\n        return (\r\n            <div className=\"container mt-4\">\r\n                <h2>Student's menu</h2>\r\n                <div className=\"my-3\">\r\n                <Link to=\"/availableExams\"><button className=\"btn btn-primary\">Available exams</button></Link>\r\n                </div>\r\n                <div>\r\n                <Link to=\"/completedExams\"><button className=\"btn btn-info\">Completed exams</button></Link>\r\n                </div>\r\n                \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default withRouter(StudentMenu);","import React, { Component } from 'react'\r\nimport { Redirect, Link } from 'react-router-dom';\r\n\r\nexport default class TakeExam extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            examId: this.props.location.state.examId,\r\n            questionList: [],\r\n            answers: [],\r\n            examReturned: false,\r\n            examResult: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        fetch(`${this.props.domain}/students/getExam`, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                //'Authorization': \"Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6NCwidXNlcm5hbWUiOiJzdHVkZW50MSIsInBhc3N3b3JkIjoiJDJiJDA0JDBoMXI5dkRnL3pGa2doM2RudUFNZWVIeHF0TGUzc1hPSUlYLlhtbzNOV3pwWjNoNDVrZnoyIiwicGVuZGluZ0V4YW1zIjoiMjAsMjEsMjIsMjMsMjQsMjUsMzAiLCJpYXQiOjE1ODI5NDIwMTgsImV4cCI6MTU4MzU0NjgxOH0.Z-Zm6DS3FwUd2hrhJ-TyY8uxxUQBG0zI11-VJJvNdwo\"\r\n                'Authorization': \"Bearer \" + this.props.user.token\r\n            },\r\n            body: JSON.stringify({ \"examId\": this.props.location.state.examId })\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    let _answer = [];\r\n                    result.questionList.forEach(e => {\r\n                        _answer.push({ questionId: e.questionId, answerNo: 0 })\r\n                    })\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        examId: result.examId,\r\n                        questionList: result.questionList,\r\n                        answers: _answer\r\n                    });\r\n                    console.log(result)\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    handleRadioChange = (event, questionId, answerNo) => {\r\n        //event.target.checked=true;\r\n        let answers = [...this.state.answers];\r\n        answers.forEach(e => {\r\n            if (e.questionId === questionId) {\r\n                e.answerNo = answerNo\r\n            }\r\n        })\r\n        console.log({ questionId, answerNo })\r\n    }\r\n\r\n    handleSubmit = async (event) => {\r\n        event.preventDefault();\r\n        //console.log(this.state.answers);\r\n        await fetch(`${this.props.domain}/students/returnExam`, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': \"Bearer \" + this.props.user.token\r\n            },\r\n            body: JSON.stringify({\r\n                examId: this.state.examId,\r\n                studentId: this.props.user.userId,\r\n                answers: this.state.answers\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                console.log(result);\r\n                alert(\"Exam submit complete\");\r\n                this.setState({ examReturned: true, examResult: result.results[0] })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        if (this.props.user.role !== \"students\") {\r\n            alert(\"Forbidden\")\r\n            return <Redirect to=\"/\" />\r\n        } else\r\n            if (this.state.error) {\r\n                return <div>Error happened</div>;\r\n            } else if (!this.state.isLoaded) {\r\n                return <h5>Loading...</h5>;\r\n            } else if (this.state.examReturned) {\r\n                return <Redirect to={{\r\n                    pathname: '/resultExam',\r\n                    result: this.state.examResult\r\n                }} />\r\n            }\r\n            else {\r\n                return (\r\n                    <div className=\"container mt-4\">\r\n                        <Link to=\"/\"><button className=\"btn btn-outline-secondary\">Back to menu</button></Link><br />\r\n                        <h2>Exam id: {this.state.examId}</h2>\r\n                        <form onSubmit={this.handleSubmit} ref={this.state.form}>\r\n                            {\r\n                                this.state.questionList.map((item, index) =>\r\n                                    <div className=\"ml-4\" key={index}>\r\n                                        <h3>{item.question}</h3>\r\n                                        {item.answerOptions.map((answer, i) =>\r\n                                            <div className=\"ml-4\" key={i}>\r\n                                                <input type=\"radio\" name={item.questionId}\r\n                                                    onChange={event => { this.handleRadioChange(event, item.questionId, answer.answerNo) }} />\r\n                                                {answer.answer}\r\n                                            </div>\r\n                                        )}\r\n                                    </div>\r\n                                )\r\n                            }\r\n                            <input className=\"btn btn-primary\" type=\"submit\" value=\"Submit exam\"></input>\r\n                        </form>\r\n                    </div>\r\n                )\r\n            }\r\n    }\r\n}\r\n","import React, { Component } from 'react';\r\nimport { Link, Redirect  } from 'react-router-dom';\r\n\r\nexport default class AvailableExams extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: true,\r\n            pendingExams: []\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        fetch(`${this.props.domain}/students/pendingExams`, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': \"Bearer \" + this.props.user.token\r\n            },\r\n            body: JSON.stringify({ id: this.props.user.userId })\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        pendingExams: result\r\n                    });\r\n                    console.log(result.rows)\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    render() {\r\n        if (this.props.user.role!==\"students\") {\r\n            alert(\"Forbidden\")\r\n            return <Redirect to=\"/\"/>\r\n        } else if (this.state.error) {\r\n            return <div>Error happened</div>;\r\n        } else if (!this.state.isLoaded) {\r\n            return <h5>Loading...</h5>;\r\n        } else {\r\n            return (\r\n                <div className=\"container mt-4\">\r\n                    <Link to=\"/\"><button className=\"btn btn-outline-secondary\">Back to menu</button></Link><br/>\r\n                    <h2 className=\"my-4\">Pending Exams</h2>\r\n                    <table className=\"table\">\r\n                        <thead>\r\n                            <tr>\r\n                                <th scope=\"col\">Exam id</th>\r\n                                <th scope=\"col\">Exam name</th>\r\n                                <th scope=\"col\">Number of questions</th>\r\n                                <th scope=\"col\"></th>\r\n                            </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                            {this.state.pendingExams.map((item, index) =>\r\n                                <tr key={index}>\r\n                                    <th scope=\"col\">{item.id}</th>\r\n                                    <td>{item.name}</td>\r\n                                    <td>{item.numberOfQuestions}</td>\r\n                                    <td>\r\n                                        <Link to={{\r\n                                            pathname: '/takeExam',\r\n                                            state: {\r\n                                                examId: item.id\r\n                                            }\r\n                                        }}><button className=\"btn btn-outline-primary\">Take</button>\r\n                                        </Link>\r\n                                    </td>\r\n                                </tr>\r\n                            )}\r\n                        </tbody>\r\n                    </table>\r\n                    <br/>\r\n                </div>\r\n            )\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nexport default class ResultExam extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        if (this.props.location.result === undefined) {\r\n            this.setState({ error: true })\r\n        }\r\n        if (this.props.location.result) {\r\n            this.setState({ isLoaded: true })\r\n        }\r\n    }\r\n    render() {\r\n        if (this.props.user.role !== \"students\") {\r\n            alert(\"Forbidden\")\r\n            return <Redirect to=\"/\" />\r\n        } else\r\n            if (this.state.error) {\r\n                return <div>Error happened</div>;\r\n            } else if (!this.state.isLoaded) {\r\n                return <h5>Loading...</h5>;\r\n            } else {\r\n                return (\r\n                    <div className=\"container mt-4\">\r\n                        <Link to=\"/\"><button className=\"btn btn-outline-secondary\">Back to menu</button></Link><br />\r\n                        <h2>Exam result</h2>\r\n                        <div>Score: <b>{this.props.location.result.score}</b></div>\r\n                        <div>Submit time: {this.props.location.result.date}</div>\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">Question No</th>\r\n                                    <th scope=\"col\">Your answer</th>\r\n                                    <th scope=\"col\">Correct answer</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.props.location.result.studentAnswers.map((e, index) =>\r\n                                    <tr>\r\n                                        <th scope=\"col\">{index + 1}</th>\r\n                                        <td>{e.studentAnswerContent}</td>\r\n                                        <td>{e.correctAnswerContent}</td>\r\n                                    </tr>)}\r\n                            </tbody>\r\n                        </table>\r\n                        <br />\r\n                    </div>\r\n                )\r\n            }\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nexport default class CompletedExams extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            data: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        fetch(`${this.props.domain}/students/getCompletedResults`, {\r\n            method: 'POST',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': \"Bearer \" + this.props.user.token\r\n            },\r\n            body: JSON.stringify({\r\n                id: this.props.user.userId\r\n            })\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                console.log(result);\r\n                this.setState({ isLoaded: true, data: result.rows })\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n    }\r\n    render() {\r\n        if (this.props.user.role !== \"students\") {\r\n            alert(\"Forbidden\")\r\n            return <Redirect to=\"/\" />\r\n        } else\r\n            if (this.state.error) {\r\n                return <div>Error happened</div>;\r\n            } else if (!this.state.isLoaded) {\r\n                return <h5>Loading...</h5>;\r\n            } else {\r\n                return (\r\n                    <div className=\"container mt-4\">\r\n                        <Link to=\"/\"><button className=\"btn btn-outline-secondary\">Back to menu</button></Link><br />\r\n                        <h2 className=\"my-4\">Completed Exams</h2>\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">Result id</th>\r\n                                    <th scope=\"col\">Exam id</th>\r\n                                    <th scope=\"col\">Score</th>\r\n                                    <th scope=\"col\">Date completed</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.data.map((e, index) =>\r\n                                    <tr key={index}>\r\n                                        <th scope=\"col\">{e.id}</th>\r\n                                        <td>{e.examId}</td>\r\n                                        <td>{e.score}</td>\r\n                                        <td>{e.date}</td>\r\n                                    </tr>)}\r\n                            </tbody>\r\n                        </table>\r\n                        <br />\r\n                    </div>\r\n                )\r\n            }\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nexport default class SchoolResults extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            data: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        fetch(`${this.props.domain}/teachers/examResults/`, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': \"Bearer \" + this.props.user.token\r\n            },\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                console.log(result);\r\n                this.setState({ isLoaded: true, data: result.resultsArray })\r\n            })\r\n            .catch(err => console.log(err));\r\n\r\n    }\r\n    render() {\r\n        if (this.state.error) {\r\n            return <div>Error happened</div>;\r\n        } else if (!this.state.isLoaded) {\r\n            return <h5>Loading...</h5>;\r\n        } else {\r\n            if (this.props.user.role !== \"teachers\") {\r\n                alert(\"Forbidden\")\r\n                return <Redirect to=\"/\" />\r\n            } else\r\n                return (\r\n                    <div className=\"container mt-4\">\r\n                        <Link to=\"/\"><button className=\"btn btn-outline-secondary\">Back to menu</button></Link><br />\r\n                        <h2>School results</h2>\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">Result id</th>\r\n                                    <th scope=\"col\">Exam id</th>\r\n                                    <th scope=\"col\">Student id</th>\r\n                                    <th scope=\"col\">Student username</th>\r\n                                    <th scope=\"col\">Score</th>\r\n                                    <th scope=\"col\">Date completed</th>\r\n                                    <th scope=\"col\"></th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.data.map((e, index) =>\r\n                                    <tr key={index}>\r\n                                        <th scope=\"col\">{e.id}</th>\r\n                                        <td>{e.examId}</td>\r\n                                        <td>{e.studentId}</td>\r\n                                        <td>{e.studentUsername}</td>\r\n                                        <td>{e.score}</td>\r\n                                        <td>{e.date}</td>\r\n                                        <td><Link className=\"btn btn-link\" to={{\r\n                                            pathname: '/individualResults',\r\n                                            id: e.id\r\n                                        }}\r\n                                        >View details</Link>\r\n                                        </td>\r\n                                    </tr>)}\r\n                            </tbody>\r\n                        </table>\r\n                        <br />\r\n                    </div>\r\n                )\r\n        }\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nexport default class ResultExam extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            data: null\r\n        }\r\n    }\r\n    componentDidMount() {\r\n        fetch(`${this.props.domain}/teachers/examResults/${this.props.location.id}`, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': \"Bearer \" + this.props.user.token\r\n            },\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                console.log(result);\r\n                this.setState({ isLoaded: true, data: result.results[0] })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n    render() {\r\n        if (this.props.user.role !== \"teachers\") {\r\n            alert(\"Forbidden\")\r\n            return <Redirect to=\"/\" />\r\n        } else\r\n            if (this.state.error) {\r\n                return <div>Error happened</div>;\r\n            } else if (!this.state.isLoaded) {\r\n                return <h5>Loading...</h5>;\r\n            } else {\r\n                return (\r\n                    <div className=\"container mt-4\">\r\n                        <Link to=\"/\"><button className=\"btn btn-outline-secondary\">Back to menu</button></Link><br />\r\n                        <h2>Individual result</h2>\r\n                        <div>Result id: {this.state.data.id}</div>\r\n                        <div>Exam id: {this.state.data.examId}</div>\r\n                        <div>Student id: {this.state.data.studentId}</div>\r\n                        <div>Student username: {this.state.data.studentUsername}</div>\r\n                        <div>Score: <b>{this.state.data.score}</b></div>\r\n                        <div>Submit time: {this.state.data.date}</div>\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                <tr>\r\n                                    <th scope=\"col\">Question No</th>\r\n                                    <th scope=\"col\">Student's answer</th>\r\n                                    <th scope=\"col\">Correct answer</th>\r\n                                </tr>\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.data.studentAnswers.map((e, index) =>\r\n                                    <tr>\r\n                                        <th scope=\"col\">{index + 1}</th>\r\n                                        <td>{e.studentAnswerContent}</td>\r\n                                        <td>{e.correctAnswerContent}</td>\r\n                                    </tr>)}\r\n                            </tbody>\r\n                        </table>\r\n                        <br />\r\n                        <Link to=\"/schoolResults\"><button className=\"btn btn-outline-secondary\">Back to School Results</button></Link>\r\n                    </div>\r\n                )\r\n            }\r\n    }\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link, Redirect } from 'react-router-dom'\r\n\r\nexport default class createExamWithCategory extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: null,\r\n            isLoaded: false,\r\n            name: \"\",\r\n            target: \"\",\r\n            category: \"\",\r\n            numberOfQuestions: 0,\r\n            questionCategories: [],\r\n            studentList: null\r\n        };\r\n    }\r\n\r\n    componentDidMount() {\r\n        fetch(`${this.props.domain}/teachers/questionCategories`, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': \"Bearer \" + this.props.user.token\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(\r\n                (result) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        questionCategories: result.rows,\r\n                        category: result.rows[0]\r\n                    });\r\n                    console.log(result.rows)\r\n                },\r\n                (error) => {\r\n                    this.setState({\r\n                        isLoaded: true,\r\n                        error\r\n                    });\r\n                }\r\n            )\r\n    }\r\n\r\n    inputChangeHandler = (event) => {\r\n        event.preventDefault();\r\n        this.setState({ [event.target.name]: event.target.value });\r\n    }\r\n\r\n    submitHandler = async (event) => {\r\n        event.preventDefault();\r\n        let examObject = {\r\n            \"teacherId\": this.props.user.userId,\r\n            \"name\": this.state.name,\r\n            \"category\": this.state.category,\r\n            \"numberOfQuestions\": this.state.numberOfQuestions,\r\n            \"target\": this.state.target\r\n        }\r\n        if (examObject.name.length > 0\r\n            && examObject.target.length > 0\r\n            && (examObject.target === \"all\" || typeof parseInt(examObject.target) === \"number\")\r\n            && examObject.numberOfQuestions > 0) {\r\n            await fetch(`${this.props.domain}/teachers/createExamWithCategory`, {\r\n                method: 'POST',\r\n                mode: 'cors',\r\n                headers: {\r\n                    'Content-Type': 'application/json',\r\n                    'Authorization': \"Bearer \" + this.props.user.token\r\n                },\r\n                body: JSON.stringify(examObject)\r\n            })\r\n                .then(res => res.json())\r\n                .then(result => {\r\n                    console.log(result);\r\n                    if (result.code === 1) {\r\n                        alert(\"Exam created\");\r\n                        this.setState({\r\n                            name: \"\",\r\n                            target: \"\",\r\n                            category: \"\",\r\n                            numberOfQuestions: 0,\r\n                        })\r\n                    } else if (result.code === 0 && result.err === \"Number of questions selected is greater than number of questions in the database\") {\r\n                        alert(result.err);\r\n                    }\r\n                    else {\r\n                        alert(\"Something went wrong\")\r\n                    }\r\n                })\r\n                .catch(err => {\r\n                    console.log(err);\r\n                    alert(\"Something went wrong\");\r\n                });\r\n        }\r\n        else {\r\n            alert(\"Some fields are not filled correctly\")\r\n        }\r\n    }\r\n\r\n    getStudentsList = (event) => {\r\n        event.preventDefault();\r\n        fetch(`${this.props.domain}/students`, {\r\n            method: 'GET',\r\n            mode: 'cors',\r\n            headers: {\r\n                'Content-Type': 'application/json',\r\n                'Authorization': \"Bearer \" + this.props.user.token\r\n            },\r\n        })\r\n            .then(res => res.json())\r\n            .then(result => {\r\n                console.log(result);\r\n                this.setState({ studentList: result.rows })\r\n            })\r\n            .catch(err => console.log(err));\r\n    }\r\n\r\n    render() {\r\n        if (this.props.user.role !== \"teachers\") {\r\n            alert(\"Forbidden\")\r\n            return <Redirect to=\"/\" />\r\n        } else\r\n            if (this.state.error) {\r\n                return <div>Error happened</div>;\r\n            } else if (!this.state.isLoaded) {\r\n                return <h5>Loading...</h5>;\r\n            } else {\r\n                return (\r\n                    <div className=\"container mt-4\">\r\n                        <Link to=\"/\"><button className=\"btn btn-outline-secondary\">Back to menu</button></Link><br />\r\n                        <h2 className=\"my-2\">Create Exam with category</h2>\r\n                        <form onSubmit={this.submitHandler}>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col-3\">Exam name:</div>\r\n                                <input className=\"form-control col\" type=\"text\" name=\"name\" value={this.state.name} onChange={this.inputChangeHandler}></input>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col-3\">Category:</div>\r\n                                <select className=\"form-control col-3\" name=\"category\" defaultValue={this.state.questionCategories[0]} value={this.state.category} onChange={this.inputChangeHandler}>\r\n                                    {this.state.questionCategories.map((e, index) => <option value={e} key={index}>{e}</option>)}\r\n                                </select>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col-3\">Number of questions: </div>\r\n                                <input className=\"form-control col\" type=\"number\" name=\"numberOfQuestions\" value={this.state.numberOfQuestions} onChange={this.inputChangeHandler}></input>\r\n                            </div>\r\n                            <div className=\"form-row\">\r\n                                <div className=\"col-3\">Target:</div>\r\n                                <input className=\"form-control col\" type=\"text\" name=\"target\" value={this.state.target} onChange={this.inputChangeHandler}></input>\r\n                            </div>\r\n                            <small>Target can only be \"all\" or a student's id</small>\r\n                            <div className=\"mt-2\"><button className=\"btn btn-primary\" type=\"submit\">Create exam</button></div>\r\n                        </form>\r\n                        <br />\r\n                        <hr></hr>\r\n                        {this.state.studentList === null ? <button className=\"btn btn-outline-secondary\" onClick={this.getStudentsList}>Get students list</button> : null}\r\n                        <table className=\"table\">\r\n                            <thead>\r\n                                {this.state.studentList === null ? null :\r\n                                    <tr>\r\n                                        <th scope=\"col\">Student id</th>\r\n                                        <th scope=\"col\">Student username</th>\r\n                                    </tr>\r\n                                }\r\n                            </thead>\r\n                            <tbody>\r\n                                {this.state.studentList === null ? null : this.state.studentList.map((e, index) =>\r\n                                    <tr key={index}>\r\n                                        <td>{e.id}</td>\r\n                                        <td>{e.username}</td>\r\n                                    </tr>\r\n                                )}\r\n                            </tbody>\r\n                        </table>\r\n                    </div>\r\n                )\r\n            }\r\n\r\n    }\r\n}\r\n","import React from 'react';\nimport { BrowserRouter as Router, Route, Redirect } from \"react-router-dom\";\nimport history from './components/history';\nimport Login from \"./components/Login\";\nimport Register from \"./components/Register\";\nimport CreateQuestion from \"./components/CreateQuestion\";\nimport CreateExam from \"./components/CreateExam\";\nimport TeacherMenu from \"./components/TeacherMenu\";\nimport StudentMenu from \"./components/StudentMenu\";\nimport TakeExam from \"./components/TakeExam\";\nimport AvailableExams from \"./components/AvailableExams\";\nimport ResultExam from \"./components/ResultExam\";\nimport CompletedExams from \"./components/CompletedExams\"\nimport SchoolResults from \"./components/SchoolResults\";\nimport IndividualResults from \"./components/IndividualResults\"\nimport CreateExamWithCategory from \"./components/CreateExamWithCategory\"\n\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      domain: \"https://powerful-dusk-96983.herokuapp.com\",\n      //domain: \"http://localhost:4000\",\n      user: {\n        userId: null,\n        role: \"\",\n        token: \"\",\n        examTaking: null\n      },\n      landingPage: routerProps => (\n        <Login {...routerProps}\n          domain={this.state.domain} user={this.state.user}\n          userIdChangeHandler={this.userIdChangeHandler}\n          tokenChangeHandler={this.tokenChangeHandler}\n          roleChangeHandler={this.roleChangeHandler}\n        />\n      ),\n      currentRoute: \"\"\n    }\n  }\n  componentDidUpdate() {\n    console.log(this.state.user)\n    if (this.state.user.token.length > 0 && this.state.user.role === \"teachers\" && this.state.currentRoute !== \"teachers\") {\n      this.setState({\n        currentRoute: \"teachers\",\n        landingPage: routerProps => (\n          <TeacherMenu {...routerProps}\n            domain={this.state.domain} user={this.state.user}\n          />\n        )\n      })\n    }\n    if (this.state.user.token.length > 0 && this.state.user.role === \"students\" && this.state.currentRoute !== \"students\") {\n      this.setState({\n        currentRoute: \"students\",\n        landingPage: routerProps => (\n          <StudentMenu {...routerProps}\n            domain={this.state.domain} user={this.state.user}\n          />\n        )\n      })\n    }\n  }\n  userIdChangeHandler = (userId) => {\n    this.setState({ user: { ...this.state.user, userId: userId } })\n  }\n  tokenChangeHandler = (token) => {\n    this.setState({ user: { ...this.state.user, token: token } })\n  }\n  roleChangeHandler = (role) => {\n    this.setState({ user: { ...this.state.user, role: role } })\n  }\n  examTakingHandler = (examId) => {\n    this.setState({ ...this.state.user, examTaking: examId })\n    return <Redirect to=\"/takeExam\"></Redirect>\n  }\n  \n  render() {\n    return (\n      <>\n        <Router>\n          <Route\n            path=\"/\"\n            exact\n            render={this.state.landingPage}\n          />\n\n          <Route\n            path=\"/register\"\n            exact\n            render={routerProps => (\n              <Register {...routerProps}\n                domain={this.state.domain} user={this.state.user}\n                roleChangeHandler={this.roleChangeHandler}\n              />\n            )}\n          />\n\n          <Route\n            path=\"/createQuestions\"\n            exact\n            render={routerProps => (\n              <CreateQuestion {...routerProps}\n                domain={this.state.domain} user={this.state.user}\n              />\n            )}\n          />\n\n          <Route\n            path=\"/createExams\"\n            exact\n            render={routerProps => (\n              <CreateExam {...routerProps}\n                domain={this.state.domain} user={this.state.user}\n              />\n            )}\n          />\n\n          <Route\n            path=\"/createExamsWithCategory\"\n            exact\n            render={routerProps => (\n              <CreateExamWithCategory {...routerProps}\n                domain={this.state.domain} user={this.state.user}\n              />\n            )}\n          />\n\n          <Route\n            path=\"/takeExam\"\n            exact\n            render={routerProps => (\n              <TakeExam {...routerProps}\n                domain={this.state.domain} user={this.state.user}\n                examTaking={this.state.user.examTaking}\n              />\n            )}\n          />\n\n          <Route\n            path=\"/availableExams\"\n            exact\n            render={routerProps => (\n              <AvailableExams {...routerProps}\n                domain={this.state.domain} user={this.state.user}\n                examTakingHandler={this.examTakingHandler}\n              />\n            )}\n          />\n\n          <Route\n            path=\"/resultExam\"\n            exact\n            render={routerProps => (\n              <ResultExam {...routerProps}\n                domain={this.state.domain} user={this.state.user}\n              />\n            )}\n          />\n\n          <Route\n            path=\"/completedExams\"\n            exact\n            render={routerProps => (\n              <CompletedExams {...routerProps}\n                domain={this.state.domain} user={this.state.user}\n              />\n            )}\n          />\n\n          <Route\n            path=\"/schoolResults\"\n            exact\n            render={routerProps => (\n              <SchoolResults {...routerProps}\n                domain={this.state.domain} user={this.state.user}\n              />\n            )}\n          />\n\n          <Route\n            path=\"/individualResults\"\n            exact\n            render={routerProps => (\n              <IndividualResults {...routerProps}\n                domain={this.state.domain} user={this.state.user}\n              />\n            )}\n          />\n\n        </Router>\n      </>\n    )\n  }\n}\n\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}